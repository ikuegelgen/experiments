{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","useState","sdk","setSdk","result","setResult","useEffect","Client","init","then","baseSdk","setPluginLoaded","catch","e","console","error","className","onClick","log","getAccessToken","r","style","width","height","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAmCeA,MA7Bf,WAAgB,IAAD,EACSC,qBADT,mBACNC,EADM,KACDC,EADC,OAEeF,qBAFf,mBAENG,EAFM,KAEEC,EAFF,KAoBb,OAhBAC,qBAAU,WACY,IAAIC,IAPV,0BAQFC,OAAOC,MAAK,SAAAC,GAClBA,EAAQC,kBACRR,EAAOO,MACRE,OAAM,SAACC,GACNC,QAAQC,MAAMF,QAEnB,IASD,sBAAKG,UAAU,MAAf,UACE,wDACA,4BAAG,mBAAGA,UAAU,cAAcC,QATjB,WACbH,QAAQI,IAAI,aAET,OAAHhB,QAAG,IAAHA,KAAKiB,iBAAiBV,MAAK,SAAAW,GAAC,OAAIf,EAAUe,OAMvC,gCACH,0BAAUC,MAAO,CAACC,MAAO,IAAKC,OAAQ,KAAtC,SAA6CnB,QChBpCoB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0be1e1c3.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport {Client, IOpsSdkAsync} from \"@deliveryhero/opsportal\";\n\nconst portalUrl = 'http://localhost:3000/';\n\nfunction App() {\n  const [sdk, setSdk] = useState<IOpsSdkAsync>();\n  const [result, setResult] = useState<string>();\n\n  useEffect(() => {\n      const opsClient = new Client(portalUrl);\n      opsClient.init().then(baseSdk => {\n          baseSdk.setPluginLoaded();\n          setSdk(baseSdk);\n      }).catch((e: Error) => {\n          console.error(e);\n      });\n  }, []);\n\n  const getToken = () => {\n      console.log(\"GET TOKEN\")\n      //@ts-ignore\n      sdk?.getAccessToken().then(r => setResult(r))\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Ops Iframe experiments</h1>\n      <p><a className=\"action-link\" onClick={getToken}>getAccessToken()</a></p>\n      <textarea style={{width: 300, height: 300}}>{result}</textarea>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}