{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","useState","sdk","setSdk","result","setResult","useEffect","Client","init","then","baseSdk","setPluginLoaded","catch","e","console","error","className","onClick","log","getAccessToken","r","dataLayer","foo","pushGtmDataLayer","JSON","stringify","layerName","style","width","height","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAgEeA,MA1Df,WAAgB,IAAD,EACSC,qBADT,mBACNC,EADM,KACDC,EADC,OAEeF,qBAFf,mBAENG,EAFM,KAEEC,EAFF,KA+Cb,OA3CAC,qBAAU,WACY,IAAIC,IAPV,0BAQFC,OAAOC,MAAK,SAAAC,GAClBA,EAAQC,kBACRR,EAAOO,MACRE,OAAM,SAACC,GACNC,QAAQC,MAAMF,QAEnB,IAoCD,sBAAKG,UAAU,MAAf,UACE,wDACA,4BAAG,mBAAGA,UAAU,cAAcC,QApCjB,WACbH,QAAQI,IAAI,aACZJ,QAAQI,IAAIhB,GACRA,GAEAA,EAAIiB,iBAAiBV,MAAK,SAAAW,GACtBN,QAAQI,IAAIE,GACZf,EAAUe,OA6Bf,gCACH,4BAAG,mBAAGJ,UAAU,cAAcC,QAzBP,WACrB,IAAMI,EAAY,CAACC,IAAK,OACpBpB,GAEAA,EAAIqB,iBAAiBF,GAAWZ,MAAK,WACjCJ,EAAUmB,KAAKC,UAAUJ,QAoBhC,kCACH,4BAAG,mBAAGL,UAAU,cAAcC,QAhBD,WAC3B,IAAMI,EAAY,CAACC,IAAK,WAClBI,EAAY,cACdxB,GAEAA,EAAIqB,iBAAiBF,EAAWK,GAAWjB,MAAK,WAC5CJ,EAAUqB,EAAY,KAAOF,KAAKC,UAAUJ,QAUnD,wDACH,0BAAUM,MAAO,CAACC,MAAO,IAAKC,OAAQ,KAAMC,MAAO1B,QC7C1C2B,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.752eee66.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport {Client, IOpsSdkAsync} from \"@deliveryhero/opsportal\";\n\nconst portalUrl = 'http://localhost:3000/';\n\nfunction App() {\n  const [sdk, setSdk] = useState<IOpsSdkAsync>();\n  const [result, setResult] = useState<string>();\n\n  useEffect(() => {\n      const opsClient = new Client(portalUrl);\n      opsClient.init().then(baseSdk => {\n          baseSdk.setPluginLoaded();\n          setSdk(baseSdk);\n      }).catch((e: Error) => {\n          console.error(e);\n      });\n  }, []);\n\n  const getToken = () => {\n      console.log(\"GET TOKEN\")\n      console.log(sdk)\n      if (sdk) {\n          //@ts-ignore\n          sdk.getAccessToken().then(r => {\n              console.log(r)\n              setResult(r)\n          })\n      }\n  };\n\n    const pushGtmDataLayer = () => {\n        const dataLayer = {foo: \"bar\"};\n        if (sdk) {\n            //@ts-ignore\n            sdk.pushGtmDataLayer(dataLayer).then(() => {\n                setResult(JSON.stringify(dataLayer))\n            })\n        }\n    };\n\n    const pushGtmDataLayerCustom = () => {\n        const dataLayer = {foo: \"another\"};\n        const layerName = \"IframeLayer\";\n        if (sdk) {\n            //@ts-ignore\n            sdk.pushGtmDataLayer(dataLayer, layerName).then(() => {\n                setResult(layerName + \": \" + JSON.stringify(dataLayer))\n            })\n        }\n    };\n\n  return (\n    <div className=\"App\">\n      <h1>Ops Iframe experiments</h1>\n      <p><a className=\"action-link\" onClick={getToken}>getAccessToken()</a></p>\n      <p><a className=\"action-link\" onClick={pushGtmDataLayer}>pushGtmDataLayer()</a></p>\n      <p><a className=\"action-link\" onClick={pushGtmDataLayerCustom}>pushGtmDataLayer() with custom layername</a></p>\n      <textarea style={{width: 300, height: 300}} value={result} />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}